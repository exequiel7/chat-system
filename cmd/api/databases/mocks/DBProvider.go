// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	gocql "github.com/gocql/gocql"
	mock "github.com/stretchr/testify/mock"
)

// DBProvider is an autogenerated mock type for the DBProvider type
type DBProvider struct {
	mock.Mock
}

// GetDbClient provides a mock function with given fields:
func (_m *DBProvider) GetDbClient() *gocql.Session {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDbClient")
	}

	var r0 *gocql.Session
	if rf, ok := ret.Get(0).(func() *gocql.Session); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gocql.Session)
		}
	}

	return r0
}

// NewDBProvider creates a new instance of DBProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDBProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *DBProvider {
	mock := &DBProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
