// Code generated by "string-enumer --text -t Environment -o ./generated_enviroment_enum_utils.go ."; DO NOT EDIT.
package config

import (
	"fmt"
)

// validEnvironmentValues contains a map of all valid Environment values for easy lookup
var validEnvironmentValues = map[Environment]struct{}{
	LOCAL: {},
	DEV:   {},
}

// Valid validates if a value is a valid Environment
func (v Environment) Valid() bool {
	_, ok := validEnvironmentValues[v]
	return ok
}

// EnvironmentValues returns a list of all (valid) Environment values
func EnvironmentValues() []Environment {
	return []Environment{
		LOCAL,
		DEV,
	}
}

// UnmarshalText takes a text, verifies that it is a correct Environment and unmarshals it
func (v *Environment) UnmarshalText(text []byte) error {
	if valid := Environment(text).Valid(); !valid {
		return fmt.Errorf("not valid value for Environment: %s", text)
	}
	*v = Environment(text)
	return nil
}
